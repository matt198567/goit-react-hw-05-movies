{"version":3,"file":"static/js/840.d4b47170.chunk.js","mappings":"oQAEaA,EAAYC,EAAAA,GAAAA,QAAH,8FAMTC,EAAgBD,EAAAA,GAAAA,IAAH,8CAIbE,EAAcF,EAAAA,GAAAA,GAAH,0CAIXG,EAAcH,EAAAA,GAAAA,GAAH,4FAOXI,EAAaJ,EAAAA,GAAAA,GAAH,2CAIVK,EAAgBL,EAAAA,GAAAA,GAAH,2CAIbM,EAAcN,EAAAA,GAAAA,EAAH,qF,SCgExB,EAlFqB,WAAO,IAAD,QACzB,GAAkCO,EAAAA,EAAAA,UAAS,MAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KAEQC,GAAOC,EAAAA,EAAAA,MAAPD,GACFE,GAAWC,EAAAA,EAAAA,MAMjB,IAJAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAaL,GAAIM,KAAKP,EACvB,GAAE,CAACC,IAEc,OAAdF,EAAJ,CAIA,IACES,EAMET,EANFS,YACAC,EAKEV,EALFU,eACAC,EAIEX,EAJFW,aACAC,EAGEZ,EAHFY,SACAC,EAEEb,EAFFa,aAIIC,EAFFd,EADFe,OAGuBC,KAAI,SAAAC,GAAI,OAAIA,EAAKC,IAAT,IAAeC,KAAK,MAEjDC,EAAmBP,EAAaQ,MAAM,IAAIC,MAAM,EAAG,GAAGH,KAAK,IAI/D,MAHqB,KAAjBN,IACFO,EAAgB,YAGhB,6BACE,SAAC,KAAD,CACEG,GACEnB,EAASoB,SAASC,SAAS,UAA3B,UACOrB,EAASsB,MAAMC,KAAKH,UAD3B,OACsCpB,EAASsB,MAAMC,KAAKC,QACtD,QAJR,mBASA,UAACrC,EAAD,YACE,gBACEsC,IAAG,0CAAqCpB,GACxCqB,IAAG,UAAKpB,GACRqB,OAAQ,OAEV,UAACtC,EAAD,YACE,UAACG,EAAD,WACGc,EADH,IACoBU,MAEpB,yCACc,4BAAOY,KAAKC,MAAqB,GAAftB,GAAlB,WAEd,SAACd,EAAD,wBACA,uBAAIe,KACJ,SAACd,EAAD,sBACA,uBAAIgB,WAIR,cAAGoB,MAAO,CAAEC,UAAW,GAAIC,SAAU,GAAIC,WAAY,QAArD,qCAGA,UAAC3C,EAAD,YACE,SAACC,EAAD,WACE,SAAC,KAAD,CAAM4B,GAAG,OAAOG,MAAO,CAAEC,KAAI,oBAAEvB,EAASsB,aAAX,aAAE,EAAgBC,YAAlB,QAA0B,IAAvD,qBAIF,SAAChC,EAAD,WACE,SAAC,KAAD,CAAM4B,GAAG,UAAUG,MAAO,CAAEC,KAAI,oBAAEvB,EAASsB,aAAX,aAAE,EAAgBC,YAAlB,QAA0B,IAA1D,2BAKJ,SAAC,EAAAW,SAAD,WACE,SAAC,KAAD,QAhEL,CAoEF,C","sources":["pages/MovieDetails.styled.js","pages/MovieDetails.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const MovieWrap = styled.section`\n  display: flex;\n  padding: 20px;\n  border-bottom: 1px grey solid;\n`;\n\nexport const InfoContainer = styled.div`\n  margin-left: 30px;\n`;\n\nexport const ListDetails = styled.ul`\n  display: flex;\n`;\n\nexport const ItemDetails = styled.li`\n  margin-right: 10px;\n  &:last-child {\n    margin-right: 0;\n  }\n`;\n\nexport const MovieTitle = styled.h2`\n  margin: 26px 0;\n`;\n\nexport const MovieOverview = styled.h3`\n  margin: 24px 0;\n`;\n\nexport const MovieGenres = styled.p`\n  margin: 20px 0;\n  font-weight: bold;\n  font-size: 18px;\n`;\n","import { useEffect, useState, Suspense } from 'react';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { getMovieInfo } from 'services/movieAPI';\nimport {\n  MovieWrap,\n  InfoContainer,\n  ListDetails,\n  ItemDetails,\n  MovieTitle,\n  MovieOverview,\n  MovieGenres,\n} from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const [movieInfo, setmovieInfo] = useState(null);\n\n  const { id } = useParams();\n  const location = useLocation();\n\n  useEffect(() => {\n    getMovieInfo(id).then(setmovieInfo);\n  }, [id]);\n\n  if (movieInfo === null) {\n    return;\n  }\n\n  const {\n    poster_path,\n    original_title,\n    vote_average,\n    overview,\n    release_date,\n    genres,\n  } = movieInfo;\n\n  const genreList = genres.map(item => item.name).join(', ');\n\n  let movieReleaseDate = release_date.split('').slice(0, 4).join('');\n  if (release_date === '') {\n    movieReleaseDate = `Unknown`;\n  }\n  return (\n    <main>\n      <Link\n        to={\n          location.pathname.includes('movies')\n            ? `${location.state.from.pathname}${location.state.from.search}`\n            : '/home'\n        }\n      >\n        Back\n      </Link>\n      <MovieWrap>\n        <img\n          src={`https://image.tmdb.org/t/p/w500/${poster_path}`}\n          alt={`${original_title}`}\n          height={400}\n        />\n        <InfoContainer>\n          <MovieTitle>\n            {original_title} {movieReleaseDate}\n          </MovieTitle>\n          <p>\n            User score: <span>{Math.round(vote_average * 10)}%</span>\n          </p>\n          <MovieOverview>Overview</MovieOverview>\n          <p>{overview}</p>\n          <MovieGenres>Genres</MovieGenres>\n          <p>{genreList}</p>\n        </InfoContainer>\n      </MovieWrap>\n\n      <p style={{ marginTop: 10, fontSize: 18, fontWeight: 'bold' }}>\n        Additional information\n      </p>\n      <ListDetails>\n        <ItemDetails>\n          <Link to=\"cast\" state={{ from: location.state?.from ?? '' }}>\n            Cast\n          </Link>\n        </ItemDetails>\n        <ItemDetails>\n          <Link to=\"reviews\" state={{ from: location.state?.from ?? '' }}>\n            Reviews\n          </Link>\n        </ItemDetails>\n      </ListDetails>\n      <Suspense>\n        <Outlet />\n      </Suspense>\n    </main>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["MovieWrap","styled","InfoContainer","ListDetails","ItemDetails","MovieTitle","MovieOverview","MovieGenres","useState","movieInfo","setmovieInfo","id","useParams","location","useLocation","useEffect","getMovieInfo","then","poster_path","original_title","vote_average","overview","release_date","genreList","genres","map","item","name","join","movieReleaseDate","split","slice","to","pathname","includes","state","from","search","src","alt","height","Math","round","style","marginTop","fontSize","fontWeight","Suspense"],"sourceRoot":""}